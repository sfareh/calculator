{"ast":null,"code":"// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\nexport function isNumber(x) {\n  return typeof x === 'number';\n}\nexport function isBigNumber(x) {\n  if (!x || typeof x !== 'object' || typeof x.constructor !== 'function') {\n    return false;\n  }\n\n  if (x.isBigNumber === true && typeof x.constructor.prototype === 'object' && x.constructor.prototype.isBigNumber === true) {\n    return true;\n  }\n\n  if (typeof x.constructor.isDecimal === 'function' && x.constructor.isDecimal(x) === true) {\n    return true;\n  }\n\n  return false;\n}\nexport function isComplex(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nexport function isFraction(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nexport function isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nexport function isString(x) {\n  return typeof x === 'string';\n}\nexport var isArray = Array.isArray;\nexport function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\n\nexport function isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nexport function isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nexport function isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nexport function isBoolean(x) {\n  return typeof x === 'boolean';\n}\nexport function isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nexport function isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\nexport function isDate(x) {\n  return x instanceof Date;\n}\nexport function isRegExp(x) {\n  return x instanceof RegExp;\n}\nexport function isObject(x) {\n  return !!(x && typeof x === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\nexport function isNull(x) {\n  return x === null;\n}\nexport function isUndefined(x) {\n  return x === undefined;\n}\nexport function isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nexport function typeOf(x) {\n  var t = typeof x;\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null';\n    if (Array.isArray(x)) return 'Array';\n    if (x instanceof Date) return 'Date';\n    if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n    if (isBigNumber(x)) return 'BigNumber';\n    if (isComplex(x)) return 'Complex';\n    if (isFraction(x)) return 'Fraction';\n    if (isMatrix(x)) return 'Matrix';\n    if (isUnit(x)) return 'Unit';\n    if (isIndex(x)) return 'Index';\n    if (isRange(x)) return 'Range';\n    if (isResultSet(x)) return 'ResultSet';\n    if (isNode(x)) return x.type;\n    if (isChain(x)) return 'Chain';\n    if (isHelp(x)) return 'Help';\n    return 'Object';\n  }\n\n  if (t === 'function') return 'Function';\n  return t; // can be 'string', 'number', 'boolean', ...\n}","map":{"version":3,"sources":["/Users/sarahrouini/PMN/calculator/node_modules/mathjs/lib/esm/utils/is.js"],"names":["isNumber","x","isBigNumber","constructor","prototype","isDecimal","isComplex","Object","getPrototypeOf","isFraction","isUnit","isString","isArray","Array","isMatrix","isCollection","isDenseMatrix","isSparseMatrix","isRange","isIndex","isBoolean","isResultSet","isHelp","isFunction","isDate","Date","isRegExp","RegExp","isObject","isNull","isUndefined","undefined","isAccessorNode","isNode","isArrayNode","isAssignmentNode","isBlockNode","isConditionalNode","isConstantNode","isFunctionAssignmentNode","isFunctionNode","isIndexNode","isObjectNode","isOperatorNode","isParenthesisNode","isRangeNode","isSymbolNode","isChain","typeOf","t","type"],"mappings":"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","sourcesContent":["// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\nexport function isNumber(x) {\n  return typeof x === 'number';\n}\nexport function isBigNumber(x) {\n  if (!x || typeof x !== 'object' || typeof x.constructor !== 'function') {\n    return false;\n  }\n\n  if (x.isBigNumber === true && typeof x.constructor.prototype === 'object' && x.constructor.prototype.isBigNumber === true) {\n    return true;\n  }\n\n  if (typeof x.constructor.isDecimal === 'function' && x.constructor.isDecimal(x) === true) {\n    return true;\n  }\n\n  return false;\n}\nexport function isComplex(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nexport function isFraction(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nexport function isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nexport function isString(x) {\n  return typeof x === 'string';\n}\nexport var isArray = Array.isArray;\nexport function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\n\nexport function isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nexport function isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nexport function isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nexport function isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nexport function isBoolean(x) {\n  return typeof x === 'boolean';\n}\nexport function isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nexport function isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nexport function isFunction(x) {\n  return typeof x === 'function';\n}\nexport function isDate(x) {\n  return x instanceof Date;\n}\nexport function isRegExp(x) {\n  return x instanceof RegExp;\n}\nexport function isObject(x) {\n  return !!(x && typeof x === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\nexport function isNull(x) {\n  return x === null;\n}\nexport function isUndefined(x) {\n  return x === undefined;\n}\nexport function isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nexport function isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nexport function typeOf(x) {\n  var t = typeof x;\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null';\n    if (Array.isArray(x)) return 'Array';\n    if (x instanceof Date) return 'Date';\n    if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n    if (isBigNumber(x)) return 'BigNumber';\n    if (isComplex(x)) return 'Complex';\n    if (isFraction(x)) return 'Fraction';\n    if (isMatrix(x)) return 'Matrix';\n    if (isUnit(x)) return 'Unit';\n    if (isIndex(x)) return 'Index';\n    if (isRange(x)) return 'Range';\n    if (isResultSet(x)) return 'ResultSet';\n    if (isNode(x)) return x.type;\n    if (isChain(x)) return 'Chain';\n    if (isHelp(x)) return 'Help';\n    return 'Object';\n  }\n\n  if (t === 'function') return 'Function';\n  return t; // can be 'string', 'number', 'boolean', ...\n}"]},"metadata":{},"sourceType":"module"}